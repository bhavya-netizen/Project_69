{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import*as Permissions from'expo-permissions';import{BarCodeScanner}from'expo-barcode-scanner';var ScanScreen=function(_React$Component){_inherits(ScanScreen,_React$Component);var _super=_createSuper(ScanScreen);function ScanScreen(){var _this;_classCallCheck(this,ScanScreen);_this=_super.call(this);_this.getCameraPermissions=function _callee(){var _await$Permissions$as,status;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));case 2:_await$Permissions$as=_context.sent;status=_await$Permissions$as.status;_this.setState({hasCameraPermissions:status===\"granted\",buttonState:'clicked',scanned:false});case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);};_this.handleBarCodeScanned=function _callee2(_ref){var type,data;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:type=_ref.type,data=_ref.data;_this.setState({scanned:true,scannedData:data,buttonState:'normal'});case 2:case\"end\":return _context2.stop();}}},null,null,null,Promise);};_this.state={hasCameraPermissions:null,scanned:false,scannedData:'',buttonState:'normal'};return _this;}_createClass(ScanScreen,[{key:\"render\",value:function render(){var hasCameraPermissions=this.state.hasCameraPermissions;var scanned=this.state.scanned;var buttonState=this.state.buttonState;if(buttonState===\"clicked\"&&hasCameraPermissions){return React.createElement(BarCodeScanner,{onBarCodeScanned:scanned?undefined:this.handleBarCodeScanned,style:StyleSheet.absoluteFillObject});}else if(buttonState===\"normal\"){return React.createElement(View,{style:styles.container},React.createElement(View,null,React.createElement(Text,{style:{textAlign:'center',fontSize:30,fontFamily:'cursive'}},\"Barcode Scanner\"),React.createElement(Image,{source:require(\"../assets/camera.jpg\"),style:{width:200,height:200}})),React.createElement(Text,{style:styles.displayText},hasCameraPermissions===true?this.state.scannedData:\"Request Camera Permission\"),React.createElement(TouchableOpacity,{onPress:this.getCameraPermissions,style:styles.scanButton,title:\"Bar Code Scanner\"},React.createElement(Text,{style:styles.buttonText},\"Scan QR Code\")));}}}]);return ScanScreen;}(React.Component);export{ScanScreen as default};var styles=StyleSheet.create({container:{flex:1,justifyContent:'center',alignItems:'center'},displayText:{fontSize:15,textDecorationLine:'underline',fontFamily:'cursive'},scanButton:{padding:10,margin:10,backgroundColor:'#2196F3',borderRadius:20},buttonText:{fontSize:20,textAlign:'center',marginTop:10}});","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/barcodeScanner/screens/scanScreen.js"],"names":["React","Permissions","BarCodeScanner","ScanScreen","getCameraPermissions","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","scannedData","state","undefined","StyleSheet","absoluteFillObject","styles","container","textAlign","fontSize","fontFamily","require","width","height","displayText","scanButton","buttonText","Component","create","flex","justifyContent","alignItems","textDecorationLine","padding","margin","backgroundColor","borderRadius","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Text, View, TouchableOpacity, Image, StyleSheet} from 'react-native';\r\nimport * as Permissions from 'expo-permissions';\r\nimport {BarCodeScanner} from 'expo-barcode-scanner';\r\n\r\nexport default class ScanScreen extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            hasCameraPermissions: null,\r\n            scanned: false,\r\n            scannedData: '',\r\n            buttonState: 'normal',\r\n        }\r\n    }\r\n\r\n        getCameraPermissions = async () => {\r\n            const {status} = await Permissions.askAsync(Permissions.CAMERA);\r\n            this.setState({\r\n                hasCameraPermissions: status === \"granted\",\r\n                buttonState: 'clicked',\r\n                scanned: false\r\n            });\r\n        }\r\n        handleBarCodeScanned = async({type, data}) => {\r\n            this.setState({\r\n                scanned: true,\r\n                scannedData: data,\r\n                buttonState: 'normal',\r\n            });\r\n        }\r\n\r\n        render(){\r\n            const hasCameraPermissions = this.state.hasCameraPermissions;\r\n            const scanned = this.state.scanned;\r\n            const buttonState = this.state.buttonState;\r\n            \r\n            if (buttonState === \"clicked\" && hasCameraPermissions){\r\n                return(\r\n                    <BarCodeScanner onBarCodeScanned = {scanned ? undefined : this.handleBarCodeScanned}\r\n                     style = {StyleSheet.absoluteFillObject}/>\r\n                );\r\n            }\r\n    \r\n            else if (buttonState === \"normal\"){\r\n                return(\r\n                    <View style = {styles.container}>\r\n                        <View>\r\n                          <Text style = {{textAlign: 'center', fontSize: 30, fontFamily: 'cursive'}}>Barcode Scanner</Text>\r\n                          <Image source = {require(\"../assets/camera.jpg\")}\r\n                                 style = {{width: 200, height: 200}}/>\r\n                            \r\n                        </View>     \r\n\r\n                        <Text style = {styles.displayText}>\r\n                            {hasCameraPermissions === true ? this.state.scannedData: \"Request Camera Permission\"}\r\n                        </Text>\r\n\r\n                        <TouchableOpacity\r\n                            onPress = {this.getCameraPermissions}\r\n                            style = {styles.scanButton}\r\n                            title = \"Bar Code Scanner\">\r\n                            <Text style = {styles.buttonText}>Scan QR Code</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const styles  = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: 'center', \r\n            alignItems: 'center',\r\n        },\r\n        displayText: {\r\n            fontSize: 15,\r\n            textDecorationLine: 'underline',\r\n            fontFamily: 'cursive',\r\n        },\r\n        scanButton: {\r\n            padding: 10,\r\n            margin: 10,\r\n            backgroundColor: '#2196F3',\r\n            borderRadius: 20,\r\n        },\r\n        buttonText: {\r\n            fontSize: 20,\r\n            textAlign: 'center',\r\n            marginTop: 10,\r\n        },\r\n    })\r\n        "]},"metadata":{},"sourceType":"module"}